/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * To use home rows - &hm LSHFT F
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm_l: hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 30 18 6 41 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35>;
        };

        hm_r: hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>;

            label = "ALT_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    \     |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   SHFT       |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
            // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
            //                                   |  GUI   |   MO1   |   ENT   |       |  SPC  |   BKSP  |  CAPS   |
            //                                   '--------+---------+---------'       '-------+---------+---------'

            bindings = <
&trans  &kp Q             &kp W             &kp E          &kp R               &kp T          &kp Y          &kp U               &kp I               &kp O             &kp P                &kp BACKSLASH
&trans  &hm_l LEFT_WIN A  &hm_l LEFT_ALT S  &hm_l LCTRL D  &hm_l LEFT_SHIFT F  &kp G          &kp H          &hm_r LEFT_SHIFT J  &hm_r LCTRL K       &hm_r LEFT_ALT L  &hm_r LEFT_WIN SEMI  &kp SQT
&trans  &kp Z             &kp X             &kp C          &kp V               &kp B          &kp N          &kp M               &kp COMMA           &kp DOT           &kp FSLH             &trans
                                            &key_repeat    &lt 1 TAB           &lt 2 SPACE    &kp BACKSPACE  &lt 4 ENTER         &mt LEFT_SHIFT ESC
            >;
        };

        lower_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // |   ESC        |    1    |    2   |   3    |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |    `     |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |              |    !    |    @   |   #    |    $    |    %    |       |   ^   |    &    |    *    |    (    |     )    |     :    |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   SHFT       |         |    +   |   -    |    {    |    [    |       |   ]   |    }    |    =    |    _    |          |          |
            // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
            //                                   |  GUI   |         |   MO3   |       |   ,   |    .    |   ?     |
            //                                   '--------+---------+---------'       '-------+---------+---------'

            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4            &kp N5               &kp N6          &kp N7           &kp N8        &kp N9          &kp N0     &trans
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR          &kp PRCNT            &kp CARET       &kp AMPS         &kp ASTERISK  &kp LPAR        &kp RPAR   &trans
&trans  &kp TILDE  &kp MINUS  &kp PLUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp EQUAL     &kp UNDERSCORE  &kp GRAVE  &trans
                              &trans    &trans            &mo 3                &trans          &trans           &trans
            >;
        };

        raise_layer {
            // .----------------------------------------------------------------.       .-----------------------------------------------------------------.
            // |   CMD+SHIFT+4  |       |   PU   |   UP   |    PD    |   HOME   |       |  HOME   |    PU    |    UP   |   PD    |          | CMD+SHIFT+4 |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |                |       |  LEFT  |  DOWN  |   RIGHT  |   END    |       |  END    |   LEFT   |   DOWN  |  RIGHT  |          |             |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |     OUT_TOG    |       |        |        |CTRL+LEFT |CTRL+RIGHT|       |CTRL+LEFT|CTRL+RIGHT|         |         |          |   OUT_TOG   |
            // '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
            //                                   |  GUI   |   MO3    |          |       |         |          |         |
            //                                   '--------+----------+----------'       '---------+----------+---------'

            bindings = <
&trans  &trans  &kp LC(PAGE_UP)  &kp UP_ARROW    &kp LC(PAGE_DOWN)   &kp PG_UP    &kp PAGE_UP         &kp LC(PAGE_UP)      &kp UP_ARROW            &kp LC(PAGE_DOWN)        &trans  &trans
&trans  &trans  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp PG_DN    &kp PAGE_DOWN       &kp LEFT_ARROW       &kp DOWN_ARROW          &kp RIGHT_ARROW          &trans  &trans
&trans  &trans  &trans           &kp LC(F5)      &kp LA(LEFT_SHIFT)  &alt_tab     &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp LC(LS(LEFT_ARROW))  &kp LC(LS(RIGHT_ARROW))  &trans  &trans
                                 &trans          &mo 3               &trans       &trans              &trans               &trans
            >;
        };

        adjust_layer {
            // .--------------------------------------------------------.       .--------------------------------------------------------------.
            // |         |        |        |        |         |         |       |  VOL+  |        |         |         |          |             |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  VOL-  |        |         |         |          |             |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |         |        |        |        |         |         |       |        |        |         |         |          |             |
            // '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
            //                             |        |         |         |       |        |        |         |
            //                             '--------+---------+---------'       '--------+--------+---------'

            bindings = <
&trans  &bt BT_CLR    &trans        &trans  &trans  &trans               &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &kp C_VOLUME_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &kp C_VOLUME_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans               &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7            &kp F8             &kp F9      &kp F10  &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREVIOUS    &kp C_PLAY_PAUSE   &kp C_NEXT  &trans   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &trans      &trans   &kp LG(L)  &trans
                        &trans  &trans  &trans    &kp DELETE        &trans             &trans
            >;
        };
    };
};
