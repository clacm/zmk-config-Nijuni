/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * To use home rows - &hm LSHFT F
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 38 37 39 40 41 30 31 18 6 19 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3 39 40 41>;
            hold-trigger-on-release;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>;

            label = "ALT_TAB";
        };

        cmd_tab: cmd_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "CMD_TAB";
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <28 31>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <25 34>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <17 18>;
        };

        sleep {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <0 11>;
        };

        bottomesc {
            bindings = <&kp ESCAPE>;
            key-positions = <24 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    \     |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   SHFT       |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
            // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
            //                                   |  GUI   |   MO1   |   ENT   |       |  SPC  |   BKSP  |  CAPS   |
            //                                   '--------+---------+---------'       '-------+---------+---------'

            bindings = <
&mt LS(LC(LG(LEFT_ALT))) TAB  &kp Q  &kp W  &kp E                &kp R         &kp T                          &kp Y                        &kp U        &kp I         &kp O    &kp P     &kp BACKSLASH
&kp LEFT_GUI                  &kp A  &kp S  &kp D                &kp F         &hml LS(LC(LG(LEFT_ALT))) G    &hmr LS(LC(LG(LEFT_ALT))) H  &kp J        &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT                &kp Z  &kp X  &kp C                &kp V         &kp B                          &kp N                        &kp M        &kp COMMA     &kp DOT  &kp FSLH  &kp GRAVE
                                            &mt LCTRL LC(SPACE)  &lt 1 ESCAPE  &lt 2 SPACE                    &lt 4 BACKSPACE              &lt 3 ENTER  &kp LEFT_ALT
            >;
        };

        num {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &kp EQUAL    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &kp MINUS    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &kp N0       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans  &trans
                        &trans  &trans  &trans       &trans                &trans                 &trans
            >;
        };

        nav {
            // .----------------------------------------------------------------.       .-----------------------------------------------------------------.
            // |   CMD+SHIFT+4  |       |   PU   |   UP   |    PD    |   HOME   |       |  HOME   |    PU    |    UP   |   PD    |          | CMD+SHIFT+4 |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |                |       |  LEFT  |  DOWN  |   RIGHT  |   END    |       |  END    |   LEFT   |   DOWN  |  RIGHT  |          |             |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |     OUT_TOG    |       |        |        |CTRL+LEFT |CTRL+RIGHT|       |CTRL+LEFT|CTRL+RIGHT|         |         |          |   OUT_TOG   |
            // '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
            //                                   |  GUI   |   MO3    |          |       |         |          |         |
            //                                   '--------+----------+----------'       '---------+----------+---------'

            bindings = <
&trans  &trans  &kp LC(PAGE_UP)  &kp UP_ARROW    &kp LC(PAGE_DOWN)  &kp LC(UP_ARROW)      &kp PAGE_UP         &kp LC(PAGE_UP)      &kp UP_ARROW            &kp LC(PAGE_DOWN)        &trans                  &trans
&trans  &trans  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp LG(LC(LS(N4)))    &kp PAGE_DOWN       &kp LEFT_ARROW       &kp DOWN_ARROW          &kp RIGHT_ARROW          &trans                  &trans
&trans  &trans  &kp LG(LS(C))    &kp LA(LG(C))   &kp LS(LG(R))      &cmd_tab              &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LS(LA(LEFT_ARROW))  &kp LA(LS(RIGHT_ARROW))  &kp LG(LS(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))
                                 &trans          &mo 0              &trans                &trans              &trans               &trans
            >;
        };

        fn_cfg {
            bindings = <
&none   &none   &kp F7  &kp F8  &kp F9  &kp F10    &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOLUME_UP    &trans        &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &kp LC(LEFT)    &kp LC(RIGHT)     &trans        &kp C_VOLUME_DOWN  &none         &kp LC(LG(Q))
                        &trans  &trans  &trans     &kp DELETE      &trans            &trans
            >;
        };

        nav_shift_arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(LS(LEFT))  &kp LG(LS(RIGHT))  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LA(LS(LEFT))  &kp LA(LS(RIGHT))  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LA(LEFT)      &kp LA(RIGHT)      &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans            &trans             &trans
            >;
        };
    };
};
